// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: documents/natip.proto

package documents

import (
	idl_common "github.com/krafton-hq/red-fox/apis/idl_common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IpType int32

const (
	IpType_Ipv4 IpType = 0
	IpType_Ipv6 IpType = 1
)

// Enum value maps for IpType.
var (
	IpType_name = map[int32]string{
		0: "Ipv4",
		1: "Ipv6",
	}
	IpType_value = map[string]int32{
		"Ipv4": 0,
		"Ipv6": 1,
	}
)

func (x IpType) Enum() *IpType {
	p := new(IpType)
	*p = x
	return p
}

func (x IpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IpType) Descriptor() protoreflect.EnumDescriptor {
	return file_documents_natip_proto_enumTypes[0].Descriptor()
}

func (IpType) Type() protoreflect.EnumType {
	return &file_documents_natip_proto_enumTypes[0]
}

func (x IpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IpType.Descriptor instead.
func (IpType) EnumDescriptor() ([]byte, []int) {
	return file_documents_natip_proto_rawDescGZIP(), []int{0}
}

type NatIp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string                 `protobuf:"bytes,1,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	Kind       string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *idl_common.ObjectMeta `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec       *NatIpSpec             `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *NatIp) Reset() {
	*x = NatIp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_documents_natip_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NatIp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatIp) ProtoMessage() {}

func (x *NatIp) ProtoReflect() protoreflect.Message {
	mi := &file_documents_natip_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NatIp.ProtoReflect.Descriptor instead.
func (*NatIp) Descriptor() ([]byte, []int) {
	return file_documents_natip_proto_rawDescGZIP(), []int{0}
}

func (x *NatIp) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *NatIp) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *NatIp) GetMetadata() *idl_common.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *NatIp) GetSpec() *NatIpSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type NatIpSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  IpType   `protobuf:"varint,1,opt,name=type,proto3,enum=redfox.api.documents.IpType" json:"type,omitempty"`
	Cidrs []string `protobuf:"bytes,2,rep,name=cidrs,proto3" json:"cidrs,omitempty"`
}

func (x *NatIpSpec) Reset() {
	*x = NatIpSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_documents_natip_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NatIpSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatIpSpec) ProtoMessage() {}

func (x *NatIpSpec) ProtoReflect() protoreflect.Message {
	mi := &file_documents_natip_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NatIpSpec.ProtoReflect.Descriptor instead.
func (*NatIpSpec) Descriptor() ([]byte, []int) {
	return file_documents_natip_proto_rawDescGZIP(), []int{1}
}

func (x *NatIpSpec) GetType() IpType {
	if x != nil {
		return x.Type
	}
	return IpType_Ipv4
}

func (x *NatIpSpec) GetCidrs() []string {
	if x != nil {
		return x.Cidrs
	}
	return nil
}

type GetNatIpRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonRes *idl_common.CommonRes `protobuf:"bytes,1,opt,name=commonRes,proto3" json:"commonRes,omitempty"`
	NatIp     *NatIp                `protobuf:"bytes,2,opt,name=natIp,proto3" json:"natIp,omitempty"`
}

func (x *GetNatIpRes) Reset() {
	*x = GetNatIpRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_documents_natip_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNatIpRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNatIpRes) ProtoMessage() {}

func (x *GetNatIpRes) ProtoReflect() protoreflect.Message {
	mi := &file_documents_natip_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNatIpRes.ProtoReflect.Descriptor instead.
func (*GetNatIpRes) Descriptor() ([]byte, []int) {
	return file_documents_natip_proto_rawDescGZIP(), []int{2}
}

func (x *GetNatIpRes) GetCommonRes() *idl_common.CommonRes {
	if x != nil {
		return x.CommonRes
	}
	return nil
}

func (x *GetNatIpRes) GetNatIp() *NatIp {
	if x != nil {
		return x.NatIp
	}
	return nil
}

type ListNatIpsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonRes *idl_common.CommonRes `protobuf:"bytes,1,opt,name=commonRes,proto3" json:"commonRes,omitempty"`
	NatIps    []*NatIp              `protobuf:"bytes,2,rep,name=natIps,proto3" json:"natIps,omitempty"`
}

func (x *ListNatIpsRes) Reset() {
	*x = ListNatIpsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_documents_natip_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNatIpsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNatIpsRes) ProtoMessage() {}

func (x *ListNatIpsRes) ProtoReflect() protoreflect.Message {
	mi := &file_documents_natip_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNatIpsRes.ProtoReflect.Descriptor instead.
func (*ListNatIpsRes) Descriptor() ([]byte, []int) {
	return file_documents_natip_proto_rawDescGZIP(), []int{3}
}

func (x *ListNatIpsRes) GetCommonRes() *idl_common.CommonRes {
	if x != nil {
		return x.CommonRes
	}
	return nil
}

func (x *ListNatIpsRes) GetNatIps() []*NatIp {
	if x != nil {
		return x.NatIps
	}
	return nil
}

type DesiredNatIpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonRes *idl_common.CommonReq `protobuf:"bytes,1,opt,name=commonRes,proto3" json:"commonRes,omitempty"`
	NatIp     *NatIp                `protobuf:"bytes,2,opt,name=natIp,proto3" json:"natIp,omitempty"`
}

func (x *DesiredNatIpReq) Reset() {
	*x = DesiredNatIpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_documents_natip_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DesiredNatIpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesiredNatIpReq) ProtoMessage() {}

func (x *DesiredNatIpReq) ProtoReflect() protoreflect.Message {
	mi := &file_documents_natip_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesiredNatIpReq.ProtoReflect.Descriptor instead.
func (*DesiredNatIpReq) Descriptor() ([]byte, []int) {
	return file_documents_natip_proto_rawDescGZIP(), []int{4}
}

func (x *DesiredNatIpReq) GetCommonRes() *idl_common.CommonReq {
	if x != nil {
		return x.CommonRes
	}
	return nil
}

func (x *DesiredNatIpReq) GetNatIp() *NatIp {
	if x != nil {
		return x.NatIp
	}
	return nil
}

var File_documents_natip_proto protoreflect.FileDescriptor

var file_documents_natip_proto_rawDesc = []byte{
	0x0a, 0x15, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x6e, 0x61, 0x74, 0x69,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x16, 0x69,
	0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x01, 0x0a, 0x05, 0x4e, 0x61, 0x74, 0x49, 0x70, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x33, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4e, 0x61, 0x74, 0x49, 0x70, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x53, 0x0a, 0x09, 0x4e, 0x61, 0x74, 0x49, 0x70,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x49, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x69, 0x64, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x69, 0x64, 0x72, 0x73, 0x22, 0x80, 0x01, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x74, 0x49, 0x70, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x05,
	0x6e, 0x61, 0x74, 0x49, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x65,
	0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x4e, 0x61, 0x74, 0x49, 0x70, 0x52, 0x05, 0x6e, 0x61, 0x74, 0x49, 0x70, 0x22,
	0x84, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x74, 0x49, 0x70, 0x73, 0x52, 0x65,
	0x73, 0x12, 0x3e, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x12, 0x33, 0x0a, 0x06, 0x6e, 0x61, 0x74, 0x49, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4e, 0x61, 0x74, 0x49, 0x70, 0x52, 0x06,
	0x6e, 0x61, 0x74, 0x49, 0x70, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x69, 0x72,
	0x65, 0x64, 0x4e, 0x61, 0x74, 0x49, 0x70, 0x52, 0x65, 0x71, 0x12, 0x3e, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x6e, 0x61,
	0x74, 0x49, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x64, 0x66,
	0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x4e, 0x61, 0x74, 0x49, 0x70, 0x52, 0x05, 0x6e, 0x61, 0x74, 0x49, 0x70, 0x2a, 0x1c, 0x0a,
	0x06, 0x49, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x70, 0x76, 0x34, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x70, 0x76, 0x36, 0x10, 0x01, 0x32, 0xd0, 0x03, 0x0a, 0x0b,
	0x4e, 0x61, 0x74, 0x49, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x57, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x4e, 0x61, 0x74, 0x49, 0x70, 0x12, 0x26, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x21, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x74, 0x49, 0x70, 0x52,
	0x65, 0x73, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x74, 0x49,
	0x70, 0x73, 0x12, 0x24, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f,
	0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x74, 0x49, 0x70, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x58, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x74, 0x49, 0x70, 0x12, 0x25,
	0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4e, 0x61, 0x74,
	0x49, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x74, 0x49, 0x70, 0x12, 0x25, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f,
	0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4e, 0x61, 0x74, 0x49, 0x70, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x74,
	0x49, 0x70, 0x12, 0x26, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x72, 0x65, 0x64,
	0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x2e,
	0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x72, 0x61,
	0x66, 0x74, 0x6f, 0x6e, 0x2d, 0x68, 0x71, 0x2f, 0x72, 0x65, 0x64, 0x2d, 0x66, 0x6f, 0x78, 0x2f,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_documents_natip_proto_rawDescOnce sync.Once
	file_documents_natip_proto_rawDescData = file_documents_natip_proto_rawDesc
)

func file_documents_natip_proto_rawDescGZIP() []byte {
	file_documents_natip_proto_rawDescOnce.Do(func() {
		file_documents_natip_proto_rawDescData = protoimpl.X.CompressGZIP(file_documents_natip_proto_rawDescData)
	})
	return file_documents_natip_proto_rawDescData
}

var file_documents_natip_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_documents_natip_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_documents_natip_proto_goTypes = []interface{}{
	(IpType)(0),                        // 0: redfox.api.documents.IpType
	(*NatIp)(nil),                      // 1: redfox.api.documents.NatIp
	(*NatIpSpec)(nil),                  // 2: redfox.api.documents.NatIpSpec
	(*GetNatIpRes)(nil),                // 3: redfox.api.documents.GetNatIpRes
	(*ListNatIpsRes)(nil),              // 4: redfox.api.documents.ListNatIpsRes
	(*DesiredNatIpReq)(nil),            // 5: redfox.api.documents.DesiredNatIpReq
	(*idl_common.ObjectMeta)(nil),      // 6: redfox.api.idl_common.ObjectMeta
	(*idl_common.CommonRes)(nil),       // 7: redfox.api.idl_common.CommonRes
	(*idl_common.CommonReq)(nil),       // 8: redfox.api.idl_common.CommonReq
	(*idl_common.SingleObjectReq)(nil), // 9: redfox.api.idl_common.SingleObjectReq
	(*idl_common.ListObjectReq)(nil),   // 10: redfox.api.idl_common.ListObjectReq
}
var file_documents_natip_proto_depIdxs = []int32{
	6,  // 0: redfox.api.documents.NatIp.metadata:type_name -> redfox.api.idl_common.ObjectMeta
	2,  // 1: redfox.api.documents.NatIp.spec:type_name -> redfox.api.documents.NatIpSpec
	0,  // 2: redfox.api.documents.NatIpSpec.type:type_name -> redfox.api.documents.IpType
	7,  // 3: redfox.api.documents.GetNatIpRes.commonRes:type_name -> redfox.api.idl_common.CommonRes
	1,  // 4: redfox.api.documents.GetNatIpRes.natIp:type_name -> redfox.api.documents.NatIp
	7,  // 5: redfox.api.documents.ListNatIpsRes.commonRes:type_name -> redfox.api.idl_common.CommonRes
	1,  // 6: redfox.api.documents.ListNatIpsRes.natIps:type_name -> redfox.api.documents.NatIp
	8,  // 7: redfox.api.documents.DesiredNatIpReq.commonRes:type_name -> redfox.api.idl_common.CommonReq
	1,  // 8: redfox.api.documents.DesiredNatIpReq.natIp:type_name -> redfox.api.documents.NatIp
	9,  // 9: redfox.api.documents.NatIpServer.GetNatIp:input_type -> redfox.api.idl_common.SingleObjectReq
	10, // 10: redfox.api.documents.NatIpServer.ListNatIps:input_type -> redfox.api.idl_common.ListObjectReq
	5,  // 11: redfox.api.documents.NatIpServer.CreateNatIp:input_type -> redfox.api.documents.DesiredNatIpReq
	5,  // 12: redfox.api.documents.NatIpServer.UpdateNatIp:input_type -> redfox.api.documents.DesiredNatIpReq
	9,  // 13: redfox.api.documents.NatIpServer.DeleteNatIp:input_type -> redfox.api.idl_common.SingleObjectReq
	3,  // 14: redfox.api.documents.NatIpServer.GetNatIp:output_type -> redfox.api.documents.GetNatIpRes
	4,  // 15: redfox.api.documents.NatIpServer.ListNatIps:output_type -> redfox.api.documents.ListNatIpsRes
	7,  // 16: redfox.api.documents.NatIpServer.CreateNatIp:output_type -> redfox.api.idl_common.CommonRes
	7,  // 17: redfox.api.documents.NatIpServer.UpdateNatIp:output_type -> redfox.api.idl_common.CommonRes
	7,  // 18: redfox.api.documents.NatIpServer.DeleteNatIp:output_type -> redfox.api.idl_common.CommonRes
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_documents_natip_proto_init() }
func file_documents_natip_proto_init() {
	if File_documents_natip_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_documents_natip_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NatIp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_documents_natip_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NatIpSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_documents_natip_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNatIpRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_documents_natip_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNatIpsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_documents_natip_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DesiredNatIpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_documents_natip_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_documents_natip_proto_goTypes,
		DependencyIndexes: file_documents_natip_proto_depIdxs,
		EnumInfos:         file_documents_natip_proto_enumTypes,
		MessageInfos:      file_documents_natip_proto_msgTypes,
	}.Build()
	File_documents_natip_proto = out.File
	file_documents_natip_proto_rawDesc = nil
	file_documents_natip_proto_goTypes = nil
	file_documents_natip_proto_depIdxs = nil
}
