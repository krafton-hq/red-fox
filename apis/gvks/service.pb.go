// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: gvks/service.proto

package gvks

import (
	idl_common "github.com/krafton-hq/red-fox/apis/idl_common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GroupVersionKind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string                 `protobuf:"bytes,1,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	Kind       string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *idl_common.ObjectMeta `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec       *GroupVersionKindSpec  `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *GroupVersionKind) Reset() {
	*x = GroupVersionKind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gvks_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupVersionKind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupVersionKind) ProtoMessage() {}

func (x *GroupVersionKind) ProtoReflect() protoreflect.Message {
	mi := &file_gvks_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupVersionKind.ProtoReflect.Descriptor instead.
func (*GroupVersionKind) Descriptor() ([]byte, []int) {
	return file_gvks_service_proto_rawDescGZIP(), []int{0}
}

func (x *GroupVersionKind) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *GroupVersionKind) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *GroupVersionKind) GetMetadata() *idl_common.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GroupVersionKind) GetSpec() *GroupVersionKindSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type GroupVersionKindSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope  string                           `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Detail *idl_common.GroupVersionKindSpec `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *GroupVersionKindSpec) Reset() {
	*x = GroupVersionKindSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gvks_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupVersionKindSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupVersionKindSpec) ProtoMessage() {}

func (x *GroupVersionKindSpec) ProtoReflect() protoreflect.Message {
	mi := &file_gvks_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupVersionKindSpec.ProtoReflect.Descriptor instead.
func (*GroupVersionKindSpec) Descriptor() ([]byte, []int) {
	return file_gvks_service_proto_rawDescGZIP(), []int{1}
}

func (x *GroupVersionKindSpec) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *GroupVersionKindSpec) GetDetail() *idl_common.GroupVersionKindSpec {
	if x != nil {
		return x.Detail
	}
	return nil
}

type GetGroupVersionKindRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonRes *idl_common.CommonRes `protobuf:"bytes,1,opt,name=commonRes,proto3" json:"commonRes,omitempty"`
	Gvk       *GroupVersionKind     `protobuf:"bytes,2,opt,name=gvk,proto3" json:"gvk,omitempty"`
}

func (x *GetGroupVersionKindRes) Reset() {
	*x = GetGroupVersionKindRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gvks_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupVersionKindRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupVersionKindRes) ProtoMessage() {}

func (x *GetGroupVersionKindRes) ProtoReflect() protoreflect.Message {
	mi := &file_gvks_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupVersionKindRes.ProtoReflect.Descriptor instead.
func (*GetGroupVersionKindRes) Descriptor() ([]byte, []int) {
	return file_gvks_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetGroupVersionKindRes) GetCommonRes() *idl_common.CommonRes {
	if x != nil {
		return x.CommonRes
	}
	return nil
}

func (x *GetGroupVersionKindRes) GetGvk() *GroupVersionKind {
	if x != nil {
		return x.Gvk
	}
	return nil
}

type ListGroupVersionKindsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonRes *idl_common.CommonRes `protobuf:"bytes,1,opt,name=commonRes,proto3" json:"commonRes,omitempty"`
	Gvks      []*GroupVersionKind   `protobuf:"bytes,2,rep,name=gvks,proto3" json:"gvks,omitempty"`
}

func (x *ListGroupVersionKindsRes) Reset() {
	*x = ListGroupVersionKindsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gvks_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupVersionKindsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupVersionKindsRes) ProtoMessage() {}

func (x *ListGroupVersionKindsRes) ProtoReflect() protoreflect.Message {
	mi := &file_gvks_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupVersionKindsRes.ProtoReflect.Descriptor instead.
func (*ListGroupVersionKindsRes) Descriptor() ([]byte, []int) {
	return file_gvks_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListGroupVersionKindsRes) GetCommonRes() *idl_common.CommonRes {
	if x != nil {
		return x.CommonRes
	}
	return nil
}

func (x *ListGroupVersionKindsRes) GetGvks() []*GroupVersionKind {
	if x != nil {
		return x.Gvks
	}
	return nil
}

type CreateGroupVersionKindReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *idl_common.CommonReq            `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq,omitempty"`
	GvkSpec   *idl_common.GroupVersionKindSpec `protobuf:"bytes,2,opt,name=gvkSpec,proto3" json:"gvkSpec,omitempty"`
}

func (x *CreateGroupVersionKindReq) Reset() {
	*x = CreateGroupVersionKindReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gvks_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupVersionKindReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupVersionKindReq) ProtoMessage() {}

func (x *CreateGroupVersionKindReq) ProtoReflect() protoreflect.Message {
	mi := &file_gvks_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupVersionKindReq.ProtoReflect.Descriptor instead.
func (*CreateGroupVersionKindReq) Descriptor() ([]byte, []int) {
	return file_gvks_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateGroupVersionKindReq) GetCommonReq() *idl_common.CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *CreateGroupVersionKindReq) GetGvkSpec() *idl_common.GroupVersionKindSpec {
	if x != nil {
		return x.GvkSpec
	}
	return nil
}

type CreateGroupVersionKindRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonRes *idl_common.CommonRes `protobuf:"bytes,1,opt,name=commonRes,proto3" json:"commonRes,omitempty"`
	Gvk       *GroupVersionKind     `protobuf:"bytes,2,opt,name=gvk,proto3" json:"gvk,omitempty"`
}

func (x *CreateGroupVersionKindRes) Reset() {
	*x = CreateGroupVersionKindRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gvks_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupVersionKindRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupVersionKindRes) ProtoMessage() {}

func (x *CreateGroupVersionKindRes) ProtoReflect() protoreflect.Message {
	mi := &file_gvks_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupVersionKindRes.ProtoReflect.Descriptor instead.
func (*CreateGroupVersionKindRes) Descriptor() ([]byte, []int) {
	return file_gvks_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateGroupVersionKindRes) GetCommonRes() *idl_common.CommonRes {
	if x != nil {
		return x.CommonRes
	}
	return nil
}

func (x *CreateGroupVersionKindRes) GetGvk() *GroupVersionKind {
	if x != nil {
		return x.Gvk
	}
	return nil
}

var File_gvks_service_proto protoreflect.FileDescriptor

var file_gvks_service_proto_rawDesc = []byte{
	0x0a, 0x12, 0x67, 0x76, 0x6b, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x67, 0x76, 0x6b, 0x73, 0x1a, 0x16, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc0, 0x01,
	0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69,
	0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f,
	0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x67, 0x76, 0x6b, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x22, 0x71, 0x0a, 0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4b, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x43,
	0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x06, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x22, 0x8d, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x12, 0x3e,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x33,
	0x0a, 0x03, 0x67, 0x76, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x65,
	0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x76, 0x6b, 0x73, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x03,
	0x67, 0x76, 0x6b, 0x22, 0x91, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x12, 0x3e, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x12, 0x35, 0x0a, 0x04, 0x67, 0x76, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x76, 0x6b, 0x73,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e,
	0x64, 0x52, 0x04, 0x67, 0x76, 0x6b, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x3e, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f,
	0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x45, 0x0a, 0x07, 0x67, 0x76, 0x6b, 0x53, 0x70, 0x65, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x07, 0x67, 0x76, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x22, 0x90, 0x01, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x03, 0x67, 0x76,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x76, 0x6b, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x03, 0x67, 0x76, 0x6b, 0x32,
	0xc8, 0x03, 0x0a, 0x16, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4b, 0x69, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x68, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e,
	0x64, 0x12, 0x26, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x72, 0x65, 0x64, 0x66,
	0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x76, 0x6b, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x73, 0x12, 0x24, 0x2e,
	0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x67, 0x76, 0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00,
	0x12, 0x72, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x2a, 0x2e, 0x72, 0x65, 0x64,
	0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x76, 0x6b, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b,
	0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x67, 0x76, 0x6b, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x26,
	0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x72, 0x61, 0x66, 0x74, 0x6f, 0x6e,
	0x2d, 0x68, 0x71, 0x2f, 0x72, 0x65, 0x64, 0x2d, 0x66, 0x6f, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x73,
	0x2f, 0x67, 0x76, 0x6b, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gvks_service_proto_rawDescOnce sync.Once
	file_gvks_service_proto_rawDescData = file_gvks_service_proto_rawDesc
)

func file_gvks_service_proto_rawDescGZIP() []byte {
	file_gvks_service_proto_rawDescOnce.Do(func() {
		file_gvks_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_gvks_service_proto_rawDescData)
	})
	return file_gvks_service_proto_rawDescData
}

var file_gvks_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_gvks_service_proto_goTypes = []interface{}{
	(*GroupVersionKind)(nil),                // 0: redfox.api.gvks.GroupVersionKind
	(*GroupVersionKindSpec)(nil),            // 1: redfox.api.gvks.GroupVersionKindSpec
	(*GetGroupVersionKindRes)(nil),          // 2: redfox.api.gvks.GetGroupVersionKindRes
	(*ListGroupVersionKindsRes)(nil),        // 3: redfox.api.gvks.ListGroupVersionKindsRes
	(*CreateGroupVersionKindReq)(nil),       // 4: redfox.api.gvks.CreateGroupVersionKindReq
	(*CreateGroupVersionKindRes)(nil),       // 5: redfox.api.gvks.CreateGroupVersionKindRes
	(*idl_common.ObjectMeta)(nil),           // 6: redfox.api.idl_common.ObjectMeta
	(*idl_common.GroupVersionKindSpec)(nil), // 7: redfox.api.idl_common.GroupVersionKindSpec
	(*idl_common.CommonRes)(nil),            // 8: redfox.api.idl_common.CommonRes
	(*idl_common.CommonReq)(nil),            // 9: redfox.api.idl_common.CommonReq
	(*idl_common.SingleObjectReq)(nil),      // 10: redfox.api.idl_common.SingleObjectReq
	(*idl_common.ListObjectReq)(nil),        // 11: redfox.api.idl_common.ListObjectReq
}
var file_gvks_service_proto_depIdxs = []int32{
	6,  // 0: redfox.api.gvks.GroupVersionKind.metadata:type_name -> redfox.api.idl_common.ObjectMeta
	1,  // 1: redfox.api.gvks.GroupVersionKind.spec:type_name -> redfox.api.gvks.GroupVersionKindSpec
	7,  // 2: redfox.api.gvks.GroupVersionKindSpec.detail:type_name -> redfox.api.idl_common.GroupVersionKindSpec
	8,  // 3: redfox.api.gvks.GetGroupVersionKindRes.commonRes:type_name -> redfox.api.idl_common.CommonRes
	0,  // 4: redfox.api.gvks.GetGroupVersionKindRes.gvk:type_name -> redfox.api.gvks.GroupVersionKind
	8,  // 5: redfox.api.gvks.ListGroupVersionKindsRes.commonRes:type_name -> redfox.api.idl_common.CommonRes
	0,  // 6: redfox.api.gvks.ListGroupVersionKindsRes.gvks:type_name -> redfox.api.gvks.GroupVersionKind
	9,  // 7: redfox.api.gvks.CreateGroupVersionKindReq.commonReq:type_name -> redfox.api.idl_common.CommonReq
	7,  // 8: redfox.api.gvks.CreateGroupVersionKindReq.gvkSpec:type_name -> redfox.api.idl_common.GroupVersionKindSpec
	8,  // 9: redfox.api.gvks.CreateGroupVersionKindRes.commonRes:type_name -> redfox.api.idl_common.CommonRes
	0,  // 10: redfox.api.gvks.CreateGroupVersionKindRes.gvk:type_name -> redfox.api.gvks.GroupVersionKind
	10, // 11: redfox.api.gvks.GroupVersionKindServer.GetGroupVersionKind:input_type -> redfox.api.idl_common.SingleObjectReq
	11, // 12: redfox.api.gvks.GroupVersionKindServer.ListGroupVersionKinds:input_type -> redfox.api.idl_common.ListObjectReq
	4,  // 13: redfox.api.gvks.GroupVersionKindServer.CreateGroupVersionKind:input_type -> redfox.api.gvks.CreateGroupVersionKindReq
	10, // 14: redfox.api.gvks.GroupVersionKindServer.DeleteGroupVersionKind:input_type -> redfox.api.idl_common.SingleObjectReq
	2,  // 15: redfox.api.gvks.GroupVersionKindServer.GetGroupVersionKind:output_type -> redfox.api.gvks.GetGroupVersionKindRes
	3,  // 16: redfox.api.gvks.GroupVersionKindServer.ListGroupVersionKinds:output_type -> redfox.api.gvks.ListGroupVersionKindsRes
	5,  // 17: redfox.api.gvks.GroupVersionKindServer.CreateGroupVersionKind:output_type -> redfox.api.gvks.CreateGroupVersionKindRes
	8,  // 18: redfox.api.gvks.GroupVersionKindServer.DeleteGroupVersionKind:output_type -> redfox.api.idl_common.CommonRes
	15, // [15:19] is the sub-list for method output_type
	11, // [11:15] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_gvks_service_proto_init() }
func file_gvks_service_proto_init() {
	if File_gvks_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gvks_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupVersionKind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gvks_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupVersionKindSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gvks_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupVersionKindRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gvks_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupVersionKindsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gvks_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupVersionKindReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gvks_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupVersionKindRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gvks_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gvks_service_proto_goTypes,
		DependencyIndexes: file_gvks_service_proto_depIdxs,
		MessageInfos:      file_gvks_service_proto_msgTypes,
	}.Build()
	File_gvks_service_proto = out.File
	file_gvks_service_proto_rawDesc = nil
	file_gvks_service_proto_goTypes = nil
	file_gvks_service_proto_depIdxs = nil
}
