// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: idl_common/types.proto

package idl_common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Scope int32

const (
	Scope_Cluster    Scope = 0
	Scope_Namespaced Scope = 1
)

// Enum value maps for Scope.
var (
	Scope_name = map[int32]string{
		0: "Cluster",
		1: "Namespaced",
	}
	Scope_value = map[string]int32{
		"Cluster":    0,
		"Namespaced": 1,
	}
)

func (x Scope) Enum() *Scope {
	p := new(Scope)
	*p = x
	return p
}

func (x Scope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Scope) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_common_types_proto_enumTypes[0].Descriptor()
}

func (Scope) Type() protoreflect.EnumType {
	return &file_idl_common_types_proto_enumTypes[0]
}

func (x Scope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Scope.Descriptor instead.
func (Scope) EnumDescriptor() ([]byte, []int) {
	return file_idl_common_types_proto_rawDescGZIP(), []int{0}
}

type ResultCode int32

const (
	ResultCode_SUCCESS ResultCode = 0
	// 10000 common
	ResultCode_FAILED                     ResultCode = 10001
	ResultCode_UNKNOWN                    ResultCode = 10002
	ResultCode_INVALID_ARGUMENT           ResultCode = 10003
	ResultCode_INVALID_PASSWORD           ResultCode = 10004
	ResultCode_UNAUTHORIZED               ResultCode = 10005
	ResultCode_INVALID_ACCOUNT            ResultCode = 10006
	ResultCode_UNAVAILABLE                ResultCode = 10007
	ResultCode_INTERNAL                   ResultCode = 10008
	ResultCode_CANCELED                   ResultCode = 10009
	ResultCode_NOT_FOUND                  ResultCode = 10010
	ResultCode_AUTH_TOKEN_EXPIRED         ResultCode = 10011
	ResultCode_ALREADY_LINKED_PLATFORM_ID ResultCode = 10012
	ResultCode_NO_PERMISSION_ACCOUNT      ResultCode = 10013
	ResultCode_RESTRICTED_LOGIN           ResultCode = 10014
	ResultCode_BANNED                     ResultCode = 10015
	ResultCode_UNAUTHORIZED_EMAIL         ResultCode = 10016
	ResultCode_DELETED_ACCOUNT            ResultCode = 10017
	ResultCode_SERVER_BUSY                ResultCode = 10018
	ResultCode_SERVER_SERVICE_OFF         ResultCode = 10019
)

// Enum value maps for ResultCode.
var (
	ResultCode_name = map[int32]string{
		0:     "SUCCESS",
		10001: "FAILED",
		10002: "UNKNOWN",
		10003: "INVALID_ARGUMENT",
		10004: "INVALID_PASSWORD",
		10005: "UNAUTHORIZED",
		10006: "INVALID_ACCOUNT",
		10007: "UNAVAILABLE",
		10008: "INTERNAL",
		10009: "CANCELED",
		10010: "NOT_FOUND",
		10011: "AUTH_TOKEN_EXPIRED",
		10012: "ALREADY_LINKED_PLATFORM_ID",
		10013: "NO_PERMISSION_ACCOUNT",
		10014: "RESTRICTED_LOGIN",
		10015: "BANNED",
		10016: "UNAUTHORIZED_EMAIL",
		10017: "DELETED_ACCOUNT",
		10018: "SERVER_BUSY",
		10019: "SERVER_SERVICE_OFF",
	}
	ResultCode_value = map[string]int32{
		"SUCCESS":                    0,
		"FAILED":                     10001,
		"UNKNOWN":                    10002,
		"INVALID_ARGUMENT":           10003,
		"INVALID_PASSWORD":           10004,
		"UNAUTHORIZED":               10005,
		"INVALID_ACCOUNT":            10006,
		"UNAVAILABLE":                10007,
		"INTERNAL":                   10008,
		"CANCELED":                   10009,
		"NOT_FOUND":                  10010,
		"AUTH_TOKEN_EXPIRED":         10011,
		"ALREADY_LINKED_PLATFORM_ID": 10012,
		"NO_PERMISSION_ACCOUNT":      10013,
		"RESTRICTED_LOGIN":           10014,
		"BANNED":                     10015,
		"UNAUTHORIZED_EMAIL":         10016,
		"DELETED_ACCOUNT":            10017,
		"SERVER_BUSY":                10018,
		"SERVER_SERVICE_OFF":         10019,
	}
)

func (x ResultCode) Enum() *ResultCode {
	p := new(ResultCode)
	*p = x
	return p
}

func (x ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_common_types_proto_enumTypes[1].Descriptor()
}

func (ResultCode) Type() protoreflect.EnumType {
	return &file_idl_common_types_proto_enumTypes[1]
}

func (x ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResultCode.Descriptor instead.
func (ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_idl_common_types_proto_rawDescGZIP(), []int{1}
}

type CommonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonReq) Reset() {
	*x = CommonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_common_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonReq) ProtoMessage() {}

func (x *CommonReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_common_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonReq.ProtoReflect.Descriptor instead.
func (*CommonReq) Descriptor() ([]byte, []int) {
	return file_idl_common_types_proto_rawDescGZIP(), []int{0}
}

type CommonRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  ResultCode `protobuf:"varint,1,opt,name=Status,proto3,enum=redfox.api.idl_common.ResultCode" json:"Status,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *CommonRes) Reset() {
	*x = CommonRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_common_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonRes) ProtoMessage() {}

func (x *CommonRes) ProtoReflect() protoreflect.Message {
	mi := &file_idl_common_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonRes.ProtoReflect.Descriptor instead.
func (*CommonRes) Descriptor() ([]byte, []int) {
	return file_idl_common_types_proto_rawDescGZIP(), []int{1}
}

func (x *CommonRes) GetStatus() ResultCode {
	if x != nil {
		return x.Status
	}
	return ResultCode_SUCCESS
}

func (x *CommonRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ObjectMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Labels      map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotations map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Namespace   string            `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ObjectMeta) Reset() {
	*x = ObjectMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_common_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectMeta) ProtoMessage() {}

func (x *ObjectMeta) ProtoReflect() protoreflect.Message {
	mi := &file_idl_common_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectMeta.ProtoReflect.Descriptor instead.
func (*ObjectMeta) Descriptor() ([]byte, []int) {
	return file_idl_common_types_proto_rawDescGZIP(), []int{2}
}

func (x *ObjectMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ObjectMeta) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ObjectMeta) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *ObjectMeta) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ApiResourceSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Scope Scope                 `protobuf:"varint,2,opt,name=scope,proto3,enum=redfox.api.idl_common.Scope" json:"scope,omitempty"`
	Gvk   *GroupVersionKindSpec `protobuf:"bytes,3,opt,name=gvk,proto3" json:"gvk,omitempty"`
}

func (x *ApiResourceSpec) Reset() {
	*x = ApiResourceSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_common_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiResourceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResourceSpec) ProtoMessage() {}

func (x *ApiResourceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_idl_common_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResourceSpec.ProtoReflect.Descriptor instead.
func (*ApiResourceSpec) Descriptor() ([]byte, []int) {
	return file_idl_common_types_proto_rawDescGZIP(), []int{3}
}

func (x *ApiResourceSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApiResourceSpec) GetScope() Scope {
	if x != nil {
		return x.Scope
	}
	return Scope_Cluster
}

func (x *ApiResourceSpec) GetGvk() *GroupVersionKindSpec {
	if x != nil {
		return x.Gvk
	}
	return nil
}

type GroupVersionKindSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group   string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Kind    string `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty"`
}

func (x *GroupVersionKindSpec) Reset() {
	*x = GroupVersionKindSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_common_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupVersionKindSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupVersionKindSpec) ProtoMessage() {}

func (x *GroupVersionKindSpec) ProtoReflect() protoreflect.Message {
	mi := &file_idl_common_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupVersionKindSpec.ProtoReflect.Descriptor instead.
func (*GroupVersionKindSpec) Descriptor() ([]byte, []int) {
	return file_idl_common_types_proto_rawDescGZIP(), []int{4}
}

func (x *GroupVersionKindSpec) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GroupVersionKindSpec) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GroupVersionKindSpec) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

type SingleObjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace *string               `protobuf:"bytes,2,opt,name=namespace,proto3,oneof" json:"namespace,omitempty"`
	Gvk       *GroupVersionKindSpec `protobuf:"bytes,3,opt,name=gvk,proto3,oneof" json:"gvk,omitempty"`
}

func (x *SingleObjectReq) Reset() {
	*x = SingleObjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_common_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleObjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleObjectReq) ProtoMessage() {}

func (x *SingleObjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_common_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleObjectReq.ProtoReflect.Descriptor instead.
func (*SingleObjectReq) Descriptor() ([]byte, []int) {
	return file_idl_common_types_proto_rawDescGZIP(), []int{5}
}

func (x *SingleObjectReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SingleObjectReq) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

func (x *SingleObjectReq) GetGvk() *GroupVersionKindSpec {
	if x != nil {
		return x.Gvk
	}
	return nil
}

type ListObjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace      string                `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	LabelSelectors map[string]string     `protobuf:"bytes,2,rep,name=labelSelectors,proto3" json:"labelSelectors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Gvk            *GroupVersionKindSpec `protobuf:"bytes,3,opt,name=gvk,proto3,oneof" json:"gvk,omitempty"`
}

func (x *ListObjectReq) Reset() {
	*x = ListObjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_common_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectReq) ProtoMessage() {}

func (x *ListObjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_common_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectReq.ProtoReflect.Descriptor instead.
func (*ListObjectReq) Descriptor() ([]byte, []int) {
	return file_idl_common_types_proto_rawDescGZIP(), []int{6}
}

func (x *ListObjectReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListObjectReq) GetLabelSelectors() map[string]string {
	if x != nil {
		return x.LabelSelectors
	}
	return nil
}

func (x *ListObjectReq) GetGvk() *GroupVersionKindSpec {
	if x != nil {
		return x.Gvk
	}
	return nil
}

var File_idl_common_types_proto protoreflect.FileDescriptor

var file_idl_common_types_proto_rawDesc = []byte{
	0x0a, 0x16, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22,
	0x0b, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x22, 0x60, 0x0a, 0x09,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x64, 0x66,
	0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xd6,
	0x02, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x45, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x54, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x98, 0x01, 0x0a, 0x0f, 0x41, 0x70, 0x69, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x32, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x03, 0x67, 0x76, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64,
	0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x03, 0x67,
	0x76, 0x6b, 0x22, 0x5a, 0x0a, 0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0xa2,
	0x01, 0x0a, 0x0f, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x03, 0x67, 0x76, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x53,
	0x70, 0x65, 0x63, 0x48, 0x01, 0x52, 0x03, 0x67, 0x76, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x67, 0x76, 0x6b, 0x22, 0x9e, 0x02, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x60, 0x0a, 0x0e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x72, 0x65,
	0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x42, 0x0a, 0x03, 0x67, 0x76, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x63, 0x48,
	0x00, 0x52, 0x03, 0x67, 0x76, 0x6b, 0x88, 0x01, 0x01, 0x1a, 0x41, 0x0a, 0x13, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x67, 0x76, 0x6b, 0x2a, 0x24, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64, 0x10, 0x01, 0x2a, 0x9f, 0x03, 0x0a, 0x0a, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x91, 0x4e, 0x12, 0x0c, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x92,
	0x4e, 0x12, 0x15, 0x0a, 0x10, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x52, 0x47,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x93, 0x4e, 0x12, 0x15, 0x0a, 0x10, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x94, 0x4e, 0x12,
	0x11, 0x0a, 0x0c, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0x10,
	0x95, 0x4e, 0x12, 0x14, 0x0a, 0x0f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x43,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x96, 0x4e, 0x12, 0x10, 0x0a, 0x0b, 0x55, 0x4e, 0x41, 0x56,
	0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x97, 0x4e, 0x12, 0x0d, 0x0a, 0x08, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x98, 0x4e, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x41, 0x4e,
	0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x99, 0x4e, 0x12, 0x0e, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f,
	0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x9a, 0x4e, 0x12, 0x17, 0x0a, 0x12, 0x41, 0x55, 0x54, 0x48,
	0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x9b,
	0x4e, 0x12, 0x1f, 0x0a, 0x1a, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x4c, 0x49, 0x4e,
	0x4b, 0x45, 0x44, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x49, 0x44, 0x10,
	0x9c, 0x4e, 0x12, 0x1a, 0x0a, 0x15, 0x4e, 0x4f, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x9d, 0x4e, 0x12, 0x15,
	0x0a, 0x10, 0x52, 0x45, 0x53, 0x54, 0x52, 0x49, 0x43, 0x54, 0x45, 0x44, 0x5f, 0x4c, 0x4f, 0x47,
	0x49, 0x4e, 0x10, 0x9e, 0x4e, 0x12, 0x0b, 0x0a, 0x06, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x10,
	0x9f, 0x4e, 0x12, 0x17, 0x0a, 0x12, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a,
	0x45, 0x44, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0xa0, 0x4e, 0x12, 0x14, 0x0a, 0x0f, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0xa1,
	0x4e, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x42, 0x55, 0x53, 0x59,
	0x10, 0xa2, 0x4e, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x45,
	0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0xa3, 0x4e, 0x42, 0x2f, 0x5a, 0x2d,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x72, 0x61, 0x66, 0x74,
	0x6f, 0x6e, 0x2d, 0x68, 0x71, 0x2f, 0x72, 0x65, 0x64, 0x2d, 0x66, 0x6f, 0x78, 0x2f, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_idl_common_types_proto_rawDescOnce sync.Once
	file_idl_common_types_proto_rawDescData = file_idl_common_types_proto_rawDesc
)

func file_idl_common_types_proto_rawDescGZIP() []byte {
	file_idl_common_types_proto_rawDescOnce.Do(func() {
		file_idl_common_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_idl_common_types_proto_rawDescData)
	})
	return file_idl_common_types_proto_rawDescData
}

var file_idl_common_types_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_idl_common_types_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_idl_common_types_proto_goTypes = []interface{}{
	(Scope)(0),                   // 0: redfox.api.idl_common.Scope
	(ResultCode)(0),              // 1: redfox.api.idl_common.ResultCode
	(*CommonReq)(nil),            // 2: redfox.api.idl_common.CommonReq
	(*CommonRes)(nil),            // 3: redfox.api.idl_common.CommonRes
	(*ObjectMeta)(nil),           // 4: redfox.api.idl_common.ObjectMeta
	(*ApiResourceSpec)(nil),      // 5: redfox.api.idl_common.ApiResourceSpec
	(*GroupVersionKindSpec)(nil), // 6: redfox.api.idl_common.GroupVersionKindSpec
	(*SingleObjectReq)(nil),      // 7: redfox.api.idl_common.SingleObjectReq
	(*ListObjectReq)(nil),        // 8: redfox.api.idl_common.ListObjectReq
	nil,                          // 9: redfox.api.idl_common.ObjectMeta.LabelsEntry
	nil,                          // 10: redfox.api.idl_common.ObjectMeta.AnnotationsEntry
	nil,                          // 11: redfox.api.idl_common.ListObjectReq.LabelSelectorsEntry
}
var file_idl_common_types_proto_depIdxs = []int32{
	1,  // 0: redfox.api.idl_common.CommonRes.Status:type_name -> redfox.api.idl_common.ResultCode
	9,  // 1: redfox.api.idl_common.ObjectMeta.labels:type_name -> redfox.api.idl_common.ObjectMeta.LabelsEntry
	10, // 2: redfox.api.idl_common.ObjectMeta.annotations:type_name -> redfox.api.idl_common.ObjectMeta.AnnotationsEntry
	0,  // 3: redfox.api.idl_common.ApiResourceSpec.scope:type_name -> redfox.api.idl_common.Scope
	6,  // 4: redfox.api.idl_common.ApiResourceSpec.gvk:type_name -> redfox.api.idl_common.GroupVersionKindSpec
	6,  // 5: redfox.api.idl_common.SingleObjectReq.gvk:type_name -> redfox.api.idl_common.GroupVersionKindSpec
	11, // 6: redfox.api.idl_common.ListObjectReq.labelSelectors:type_name -> redfox.api.idl_common.ListObjectReq.LabelSelectorsEntry
	6,  // 7: redfox.api.idl_common.ListObjectReq.gvk:type_name -> redfox.api.idl_common.GroupVersionKindSpec
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_idl_common_types_proto_init() }
func file_idl_common_types_proto_init() {
	if File_idl_common_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_idl_common_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_common_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_common_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_common_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiResourceSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_common_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupVersionKindSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_common_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleObjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_common_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_idl_common_types_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_idl_common_types_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_idl_common_types_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_idl_common_types_proto_goTypes,
		DependencyIndexes: file_idl_common_types_proto_depIdxs,
		EnumInfos:         file_idl_common_types_proto_enumTypes,
		MessageInfos:      file_idl_common_types_proto_msgTypes,
	}.Build()
	File_idl_common_types_proto = out.File
	file_idl_common_types_proto_rawDesc = nil
	file_idl_common_types_proto_goTypes = nil
	file_idl_common_types_proto_depIdxs = nil
}
