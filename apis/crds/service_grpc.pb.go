// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.4
// source: crds/service.proto

package crds

import (
	context "context"
	idl_common "github.com/krafton-hq/red-fox/apis/idl_common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// CustomResourceDefinitionServerClient is the client API for CustomResourceDefinitionServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CustomResourceDefinitionServerClient interface {
	GetCustomResourceDefinition(ctx context.Context, in *idl_common.SingleObjectReq, opts ...grpc.CallOption) (*GetCustomResourceDefinitionRes, error)
	ListCustomResourceDefinitions(ctx context.Context, in *idl_common.ListObjectReq, opts ...grpc.CallOption) (*ListCustomResourceDefinitionsRes, error)
	CreateCustomResourceDefinition(ctx context.Context, in *CreateCustomResourceDefinitionReq, opts ...grpc.CallOption) (*idl_common.CommonRes, error)
	UpdateCustomResourceDefinition(ctx context.Context, in *UpdateCustomResourceDefinitionReq, opts ...grpc.CallOption) (*idl_common.CommonRes, error)
	DeleteCustomResourceDefinition(ctx context.Context, in *idl_common.SingleObjectReq, opts ...grpc.CallOption) (*idl_common.CommonRes, error)
}

type customResourceDefinitionServerClient struct {
	cc grpc.ClientConnInterface
}

func NewCustomResourceDefinitionServerClient(cc grpc.ClientConnInterface) CustomResourceDefinitionServerClient {
	return &customResourceDefinitionServerClient{cc}
}

func (c *customResourceDefinitionServerClient) GetCustomResourceDefinition(ctx context.Context, in *idl_common.SingleObjectReq, opts ...grpc.CallOption) (*GetCustomResourceDefinitionRes, error) {
	out := new(GetCustomResourceDefinitionRes)
	err := c.cc.Invoke(ctx, "/redfox.api.crds.CustomResourceDefinitionServer/GetCustomResourceDefinition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customResourceDefinitionServerClient) ListCustomResourceDefinitions(ctx context.Context, in *idl_common.ListObjectReq, opts ...grpc.CallOption) (*ListCustomResourceDefinitionsRes, error) {
	out := new(ListCustomResourceDefinitionsRes)
	err := c.cc.Invoke(ctx, "/redfox.api.crds.CustomResourceDefinitionServer/ListCustomResourceDefinitions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customResourceDefinitionServerClient) CreateCustomResourceDefinition(ctx context.Context, in *CreateCustomResourceDefinitionReq, opts ...grpc.CallOption) (*idl_common.CommonRes, error) {
	out := new(idl_common.CommonRes)
	err := c.cc.Invoke(ctx, "/redfox.api.crds.CustomResourceDefinitionServer/CreateCustomResourceDefinition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customResourceDefinitionServerClient) UpdateCustomResourceDefinition(ctx context.Context, in *UpdateCustomResourceDefinitionReq, opts ...grpc.CallOption) (*idl_common.CommonRes, error) {
	out := new(idl_common.CommonRes)
	err := c.cc.Invoke(ctx, "/redfox.api.crds.CustomResourceDefinitionServer/UpdateCustomResourceDefinition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customResourceDefinitionServerClient) DeleteCustomResourceDefinition(ctx context.Context, in *idl_common.SingleObjectReq, opts ...grpc.CallOption) (*idl_common.CommonRes, error) {
	out := new(idl_common.CommonRes)
	err := c.cc.Invoke(ctx, "/redfox.api.crds.CustomResourceDefinitionServer/DeleteCustomResourceDefinition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomResourceDefinitionServerServer is the server API for CustomResourceDefinitionServer service.
// All implementations must embed UnimplementedCustomResourceDefinitionServerServer
// for forward compatibility
type CustomResourceDefinitionServerServer interface {
	GetCustomResourceDefinition(context.Context, *idl_common.SingleObjectReq) (*GetCustomResourceDefinitionRes, error)
	ListCustomResourceDefinitions(context.Context, *idl_common.ListObjectReq) (*ListCustomResourceDefinitionsRes, error)
	CreateCustomResourceDefinition(context.Context, *CreateCustomResourceDefinitionReq) (*idl_common.CommonRes, error)
	UpdateCustomResourceDefinition(context.Context, *UpdateCustomResourceDefinitionReq) (*idl_common.CommonRes, error)
	DeleteCustomResourceDefinition(context.Context, *idl_common.SingleObjectReq) (*idl_common.CommonRes, error)
	mustEmbedUnimplementedCustomResourceDefinitionServerServer()
}

// UnimplementedCustomResourceDefinitionServerServer must be embedded to have forward compatible implementations.
type UnimplementedCustomResourceDefinitionServerServer struct {
}

func (UnimplementedCustomResourceDefinitionServerServer) GetCustomResourceDefinition(context.Context, *idl_common.SingleObjectReq) (*GetCustomResourceDefinitionRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomResourceDefinition not implemented")
}
func (UnimplementedCustomResourceDefinitionServerServer) ListCustomResourceDefinitions(context.Context, *idl_common.ListObjectReq) (*ListCustomResourceDefinitionsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCustomResourceDefinitions not implemented")
}
func (UnimplementedCustomResourceDefinitionServerServer) CreateCustomResourceDefinition(context.Context, *CreateCustomResourceDefinitionReq) (*idl_common.CommonRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCustomResourceDefinition not implemented")
}
func (UnimplementedCustomResourceDefinitionServerServer) UpdateCustomResourceDefinition(context.Context, *UpdateCustomResourceDefinitionReq) (*idl_common.CommonRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCustomResourceDefinition not implemented")
}
func (UnimplementedCustomResourceDefinitionServerServer) DeleteCustomResourceDefinition(context.Context, *idl_common.SingleObjectReq) (*idl_common.CommonRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCustomResourceDefinition not implemented")
}
func (UnimplementedCustomResourceDefinitionServerServer) mustEmbedUnimplementedCustomResourceDefinitionServerServer() {
}

// UnsafeCustomResourceDefinitionServerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CustomResourceDefinitionServerServer will
// result in compilation errors.
type UnsafeCustomResourceDefinitionServerServer interface {
	mustEmbedUnimplementedCustomResourceDefinitionServerServer()
}

func RegisterCustomResourceDefinitionServerServer(s grpc.ServiceRegistrar, srv CustomResourceDefinitionServerServer) {
	s.RegisterService(&CustomResourceDefinitionServer_ServiceDesc, srv)
}

func _CustomResourceDefinitionServer_GetCustomResourceDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(idl_common.SingleObjectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomResourceDefinitionServerServer).GetCustomResourceDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/redfox.api.crds.CustomResourceDefinitionServer/GetCustomResourceDefinition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomResourceDefinitionServerServer).GetCustomResourceDefinition(ctx, req.(*idl_common.SingleObjectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomResourceDefinitionServer_ListCustomResourceDefinitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(idl_common.ListObjectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomResourceDefinitionServerServer).ListCustomResourceDefinitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/redfox.api.crds.CustomResourceDefinitionServer/ListCustomResourceDefinitions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomResourceDefinitionServerServer).ListCustomResourceDefinitions(ctx, req.(*idl_common.ListObjectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomResourceDefinitionServer_CreateCustomResourceDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCustomResourceDefinitionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomResourceDefinitionServerServer).CreateCustomResourceDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/redfox.api.crds.CustomResourceDefinitionServer/CreateCustomResourceDefinition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomResourceDefinitionServerServer).CreateCustomResourceDefinition(ctx, req.(*CreateCustomResourceDefinitionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomResourceDefinitionServer_UpdateCustomResourceDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCustomResourceDefinitionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomResourceDefinitionServerServer).UpdateCustomResourceDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/redfox.api.crds.CustomResourceDefinitionServer/UpdateCustomResourceDefinition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomResourceDefinitionServerServer).UpdateCustomResourceDefinition(ctx, req.(*UpdateCustomResourceDefinitionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomResourceDefinitionServer_DeleteCustomResourceDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(idl_common.SingleObjectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomResourceDefinitionServerServer).DeleteCustomResourceDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/redfox.api.crds.CustomResourceDefinitionServer/DeleteCustomResourceDefinition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomResourceDefinitionServerServer).DeleteCustomResourceDefinition(ctx, req.(*idl_common.SingleObjectReq))
	}
	return interceptor(ctx, in, info, handler)
}

// CustomResourceDefinitionServer_ServiceDesc is the grpc.ServiceDesc for CustomResourceDefinitionServer service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CustomResourceDefinitionServer_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "redfox.api.crds.CustomResourceDefinitionServer",
	HandlerType: (*CustomResourceDefinitionServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCustomResourceDefinition",
			Handler:    _CustomResourceDefinitionServer_GetCustomResourceDefinition_Handler,
		},
		{
			MethodName: "ListCustomResourceDefinitions",
			Handler:    _CustomResourceDefinitionServer_ListCustomResourceDefinitions_Handler,
		},
		{
			MethodName: "CreateCustomResourceDefinition",
			Handler:    _CustomResourceDefinitionServer_CreateCustomResourceDefinition_Handler,
		},
		{
			MethodName: "UpdateCustomResourceDefinition",
			Handler:    _CustomResourceDefinitionServer_UpdateCustomResourceDefinition_Handler,
		},
		{
			MethodName: "DeleteCustomResourceDefinition",
			Handler:    _CustomResourceDefinitionServer_DeleteCustomResourceDefinition_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "crds/service.proto",
}
