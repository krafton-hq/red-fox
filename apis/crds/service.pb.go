// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: crds/service.proto

package crds

import (
	idl_common "github.com/krafton-hq/red-fox/apis/idl_common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CustomResourceDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string                        `protobuf:"bytes,1,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	Kind       string                        `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *idl_common.ObjectMeta        `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec       *CustomResourceDefinitionSpec `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CustomResourceDefinition) Reset() {
	*x = CustomResourceDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crds_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomResourceDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomResourceDefinition) ProtoMessage() {}

func (x *CustomResourceDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_crds_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomResourceDefinition.ProtoReflect.Descriptor instead.
func (*CustomResourceDefinition) Descriptor() ([]byte, []int) {
	return file_crds_service_proto_rawDescGZIP(), []int{0}
}

func (x *CustomResourceDefinition) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *CustomResourceDefinition) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *CustomResourceDefinition) GetMetadata() *idl_common.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CustomResourceDefinition) GetSpec() *CustomResourceDefinitionSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type CustomResourceDefinitionSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gvk *idl_common.GroupVersionKindSpec `protobuf:"bytes,1,opt,name=gvk,proto3" json:"gvk,omitempty"`
}

func (x *CustomResourceDefinitionSpec) Reset() {
	*x = CustomResourceDefinitionSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crds_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomResourceDefinitionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomResourceDefinitionSpec) ProtoMessage() {}

func (x *CustomResourceDefinitionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_crds_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomResourceDefinitionSpec.ProtoReflect.Descriptor instead.
func (*CustomResourceDefinitionSpec) Descriptor() ([]byte, []int) {
	return file_crds_service_proto_rawDescGZIP(), []int{1}
}

func (x *CustomResourceDefinitionSpec) GetGvk() *idl_common.GroupVersionKindSpec {
	if x != nil {
		return x.Gvk
	}
	return nil
}

type GetCustomResourceDefinitionRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonRes *idl_common.CommonRes     `protobuf:"bytes,1,opt,name=commonRes,proto3" json:"commonRes,omitempty"`
	Crd       *CustomResourceDefinition `protobuf:"bytes,2,opt,name=crd,proto3" json:"crd,omitempty"`
}

func (x *GetCustomResourceDefinitionRes) Reset() {
	*x = GetCustomResourceDefinitionRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crds_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomResourceDefinitionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomResourceDefinitionRes) ProtoMessage() {}

func (x *GetCustomResourceDefinitionRes) ProtoReflect() protoreflect.Message {
	mi := &file_crds_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomResourceDefinitionRes.ProtoReflect.Descriptor instead.
func (*GetCustomResourceDefinitionRes) Descriptor() ([]byte, []int) {
	return file_crds_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetCustomResourceDefinitionRes) GetCommonRes() *idl_common.CommonRes {
	if x != nil {
		return x.CommonRes
	}
	return nil
}

func (x *GetCustomResourceDefinitionRes) GetCrd() *CustomResourceDefinition {
	if x != nil {
		return x.Crd
	}
	return nil
}

type ListCustomResourceDefinitionsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonRes *idl_common.CommonRes       `protobuf:"bytes,1,opt,name=commonRes,proto3" json:"commonRes,omitempty"`
	Crds      []*CustomResourceDefinition `protobuf:"bytes,2,rep,name=crds,proto3" json:"crds,omitempty"`
}

func (x *ListCustomResourceDefinitionsRes) Reset() {
	*x = ListCustomResourceDefinitionsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crds_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCustomResourceDefinitionsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCustomResourceDefinitionsRes) ProtoMessage() {}

func (x *ListCustomResourceDefinitionsRes) ProtoReflect() protoreflect.Message {
	mi := &file_crds_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCustomResourceDefinitionsRes.ProtoReflect.Descriptor instead.
func (*ListCustomResourceDefinitionsRes) Descriptor() ([]byte, []int) {
	return file_crds_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListCustomResourceDefinitionsRes) GetCommonRes() *idl_common.CommonRes {
	if x != nil {
		return x.CommonRes
	}
	return nil
}

func (x *ListCustomResourceDefinitionsRes) GetCrds() []*CustomResourceDefinition {
	if x != nil {
		return x.Crds
	}
	return nil
}

type CreateCustomResourceDefinitionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *idl_common.CommonReq     `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq,omitempty"`
	Crd       *CustomResourceDefinition `protobuf:"bytes,2,opt,name=crd,proto3" json:"crd,omitempty"`
}

func (x *CreateCustomResourceDefinitionReq) Reset() {
	*x = CreateCustomResourceDefinitionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crds_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCustomResourceDefinitionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomResourceDefinitionReq) ProtoMessage() {}

func (x *CreateCustomResourceDefinitionReq) ProtoReflect() protoreflect.Message {
	mi := &file_crds_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomResourceDefinitionReq.ProtoReflect.Descriptor instead.
func (*CreateCustomResourceDefinitionReq) Descriptor() ([]byte, []int) {
	return file_crds_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateCustomResourceDefinitionReq) GetCommonReq() *idl_common.CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *CreateCustomResourceDefinitionReq) GetCrd() *CustomResourceDefinition {
	if x != nil {
		return x.Crd
	}
	return nil
}

type UpdateCustomResourceDefinitionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *idl_common.CommonReq     `protobuf:"bytes,1,opt,name=commonReq,proto3" json:"commonReq,omitempty"`
	Crd       *CustomResourceDefinition `protobuf:"bytes,2,opt,name=crd,proto3" json:"crd,omitempty"`
}

func (x *UpdateCustomResourceDefinitionReq) Reset() {
	*x = UpdateCustomResourceDefinitionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crds_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomResourceDefinitionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomResourceDefinitionReq) ProtoMessage() {}

func (x *UpdateCustomResourceDefinitionReq) ProtoReflect() protoreflect.Message {
	mi := &file_crds_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomResourceDefinitionReq.ProtoReflect.Descriptor instead.
func (*UpdateCustomResourceDefinitionReq) Descriptor() ([]byte, []int) {
	return file_crds_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateCustomResourceDefinitionReq) GetCommonReq() *idl_common.CommonReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

func (x *UpdateCustomResourceDefinitionReq) GetCrd() *CustomResourceDefinition {
	if x != nil {
		return x.Crd
	}
	return nil
}

var File_crds_service_proto protoreflect.FileDescriptor

var file_crds_service_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x72, 0x64, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x72, 0x64, 0x73, 0x1a, 0x16, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0, 0x01,
	0x0a, 0x18, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70,
	0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x3d,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64,
	0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x72, 0x65,
	0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x64, 0x73, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x22, 0x5d, 0x0a, 0x1c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x3d, 0x0a, 0x03, 0x67, 0x76, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x03, 0x67, 0x76, 0x6b, 0x22,
	0x9d, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x12, 0x3e, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x12, 0x3b, 0x0a, 0x03, 0x63, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x64,
	0x73, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x63, 0x72, 0x64, 0x22,
	0xa1, 0x01, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x04, 0x63, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x72, 0x64, 0x73, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x63,
	0x72, 0x64, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x3e, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72,
	0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x03, 0x63, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x64, 0x73, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x03, 0x63, 0x72, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x3e, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x03,
	0x63, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x72, 0x65, 0x64, 0x66,
	0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x64, 0x73, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x63, 0x72, 0x64, 0x32, 0xf8, 0x04, 0x0a, 0x1e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x78, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x72, 0x65,
	0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x72, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e,
	0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x64, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x22, 0x00, 0x12, 0x78, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x72, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f,
	0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x1e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32,
	0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x64, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x20, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f,
	0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x20, 0x2e, 0x72, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x64,
	0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x22, 0x00, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6b, 0x72, 0x61, 0x66, 0x74, 0x6f, 0x6e, 0x2d, 0x68, 0x71, 0x2f, 0x72, 0x65,
	0x64, 0x2d, 0x66, 0x6f, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x72, 0x64, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_crds_service_proto_rawDescOnce sync.Once
	file_crds_service_proto_rawDescData = file_crds_service_proto_rawDesc
)

func file_crds_service_proto_rawDescGZIP() []byte {
	file_crds_service_proto_rawDescOnce.Do(func() {
		file_crds_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_crds_service_proto_rawDescData)
	})
	return file_crds_service_proto_rawDescData
}

var file_crds_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_crds_service_proto_goTypes = []interface{}{
	(*CustomResourceDefinition)(nil),          // 0: redfox.api.crds.CustomResourceDefinition
	(*CustomResourceDefinitionSpec)(nil),      // 1: redfox.api.crds.CustomResourceDefinitionSpec
	(*GetCustomResourceDefinitionRes)(nil),    // 2: redfox.api.crds.GetCustomResourceDefinitionRes
	(*ListCustomResourceDefinitionsRes)(nil),  // 3: redfox.api.crds.ListCustomResourceDefinitionsRes
	(*CreateCustomResourceDefinitionReq)(nil), // 4: redfox.api.crds.CreateCustomResourceDefinitionReq
	(*UpdateCustomResourceDefinitionReq)(nil), // 5: redfox.api.crds.UpdateCustomResourceDefinitionReq
	(*idl_common.ObjectMeta)(nil),             // 6: redfox.api.idl_common.ObjectMeta
	(*idl_common.GroupVersionKindSpec)(nil),   // 7: redfox.api.idl_common.GroupVersionKindSpec
	(*idl_common.CommonRes)(nil),              // 8: redfox.api.idl_common.CommonRes
	(*idl_common.CommonReq)(nil),              // 9: redfox.api.idl_common.CommonReq
	(*idl_common.SingleObjectReq)(nil),        // 10: redfox.api.idl_common.SingleObjectReq
	(*idl_common.ListObjectReq)(nil),          // 11: redfox.api.idl_common.ListObjectReq
}
var file_crds_service_proto_depIdxs = []int32{
	6,  // 0: redfox.api.crds.CustomResourceDefinition.metadata:type_name -> redfox.api.idl_common.ObjectMeta
	1,  // 1: redfox.api.crds.CustomResourceDefinition.spec:type_name -> redfox.api.crds.CustomResourceDefinitionSpec
	7,  // 2: redfox.api.crds.CustomResourceDefinitionSpec.gvk:type_name -> redfox.api.idl_common.GroupVersionKindSpec
	8,  // 3: redfox.api.crds.GetCustomResourceDefinitionRes.commonRes:type_name -> redfox.api.idl_common.CommonRes
	0,  // 4: redfox.api.crds.GetCustomResourceDefinitionRes.crd:type_name -> redfox.api.crds.CustomResourceDefinition
	8,  // 5: redfox.api.crds.ListCustomResourceDefinitionsRes.commonRes:type_name -> redfox.api.idl_common.CommonRes
	0,  // 6: redfox.api.crds.ListCustomResourceDefinitionsRes.crds:type_name -> redfox.api.crds.CustomResourceDefinition
	9,  // 7: redfox.api.crds.CreateCustomResourceDefinitionReq.commonReq:type_name -> redfox.api.idl_common.CommonReq
	0,  // 8: redfox.api.crds.CreateCustomResourceDefinitionReq.crd:type_name -> redfox.api.crds.CustomResourceDefinition
	9,  // 9: redfox.api.crds.UpdateCustomResourceDefinitionReq.commonReq:type_name -> redfox.api.idl_common.CommonReq
	0,  // 10: redfox.api.crds.UpdateCustomResourceDefinitionReq.crd:type_name -> redfox.api.crds.CustomResourceDefinition
	10, // 11: redfox.api.crds.CustomResourceDefinitionServer.GetCustomResourceDefinition:input_type -> redfox.api.idl_common.SingleObjectReq
	11, // 12: redfox.api.crds.CustomResourceDefinitionServer.ListCustomResourceDefinitions:input_type -> redfox.api.idl_common.ListObjectReq
	4,  // 13: redfox.api.crds.CustomResourceDefinitionServer.CreateCustomResourceDefinition:input_type -> redfox.api.crds.CreateCustomResourceDefinitionReq
	5,  // 14: redfox.api.crds.CustomResourceDefinitionServer.UpdateCustomResourceDefinition:input_type -> redfox.api.crds.UpdateCustomResourceDefinitionReq
	10, // 15: redfox.api.crds.CustomResourceDefinitionServer.DeleteCustomResourceDefinition:input_type -> redfox.api.idl_common.SingleObjectReq
	2,  // 16: redfox.api.crds.CustomResourceDefinitionServer.GetCustomResourceDefinition:output_type -> redfox.api.crds.GetCustomResourceDefinitionRes
	3,  // 17: redfox.api.crds.CustomResourceDefinitionServer.ListCustomResourceDefinitions:output_type -> redfox.api.crds.ListCustomResourceDefinitionsRes
	8,  // 18: redfox.api.crds.CustomResourceDefinitionServer.CreateCustomResourceDefinition:output_type -> redfox.api.idl_common.CommonRes
	8,  // 19: redfox.api.crds.CustomResourceDefinitionServer.UpdateCustomResourceDefinition:output_type -> redfox.api.idl_common.CommonRes
	8,  // 20: redfox.api.crds.CustomResourceDefinitionServer.DeleteCustomResourceDefinition:output_type -> redfox.api.idl_common.CommonRes
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_crds_service_proto_init() }
func file_crds_service_proto_init() {
	if File_crds_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_crds_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomResourceDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crds_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomResourceDefinitionSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crds_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomResourceDefinitionRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crds_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCustomResourceDefinitionsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crds_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCustomResourceDefinitionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crds_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomResourceDefinitionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_crds_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_crds_service_proto_goTypes,
		DependencyIndexes: file_crds_service_proto_depIdxs,
		MessageInfos:      file_crds_service_proto_msgTypes,
	}.Build()
	File_crds_service_proto = out.File
	file_crds_service_proto_rawDesc = nil
	file_crds_service_proto_goTypes = nil
	file_crds_service_proto_depIdxs = nil
}
